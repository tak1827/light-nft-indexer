{
  "swagger": "2.0",
  "info": {
    "title": "service/holder.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Holder"
    },
    {
      "name": "Nft"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/holder": {
      "get": {
        "operationId": "Holder_ListAllHolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceListAllHolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Holder"
        ]
      }
    },
    "/v1/holder/{walletAddress}": {
      "get": {
        "operationId": "Holder_GetHolder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceGetHolderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Holder"
        ]
      }
    },
    "/v1/nft": {
      "get": {
        "operationId": "Nft_ListAllNftContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceListAllNftContractResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Nft"
        ]
      }
    },
    "/v1/nft/{contractAddress}": {
      "get": {
        "operationId": "Nft_GetNftContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceGetNftContractResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/v1/nft/{contractAddress}/token": {
      "get": {
        "operationId": "Nft_ListAllNftToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceListAllNftTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/v1/nft/{contractAddress}/token/{tokenId}": {
      "get": {
        "operationId": "Nft_GetNftToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceGetNftTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    }
  },
  "definitions": {
    "dataCollection": {
      "type": "object",
      "properties": {
        "contractAddress": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dataHolder": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "collections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dataCollection"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dataImageType": {
      "type": "string",
      "enum": [
        "IMAGE_TYPE_UNSPECIFIED",
        "IMAGE_TYPE_NATIVE",
        "IMAGE_TYPE_REFERENCE"
      ],
      "default": "IMAGE_TYPE_UNSPECIFIED"
    },
    "dataNFTContract": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "totalSupply": {
          "type": "string",
          "format": "uint64"
        },
        "tokenIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dataToken": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/dataTokenMeta"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dataTokenMeta": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/dataTokenMetaImage"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dataTokenMetaImage": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/dataImageType"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "dataTransferHistory": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "blockNumber": {
          "type": "string",
          "format": "uint64"
        },
        "indexLogInBlock": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serviceGetHolderResponse": {
      "type": "object",
      "properties": {
        "holder": {
          "$ref": "#/definitions/dataHolder"
        }
      }
    },
    "serviceGetNftContractResponse": {
      "type": "object",
      "properties": {
        "nft": {
          "$ref": "#/definitions/dataNFTContract"
        }
      }
    },
    "serviceGetNftTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/dataToken"
        },
        "transferHistories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dataTransferHistory"
          }
        }
      }
    },
    "serviceHolderMini": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "serviceListAllHolderResponse": {
      "type": "object",
      "properties": {
        "holders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serviceHolderMini"
          }
        }
      }
    },
    "serviceListAllNftContractResponse": {
      "type": "object",
      "properties": {
        "nfts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/dataNFTContract"
          }
        }
      }
    },
    "serviceListAllNftTokenResponse": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serviceTokenMini"
          }
        }
      }
    },
    "serviceTokenMini": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/dataTokenMeta"
        }
      }
    }
  }
}
